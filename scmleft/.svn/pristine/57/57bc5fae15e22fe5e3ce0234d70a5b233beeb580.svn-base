<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.happyjob.study.ship.dao.OrderReturnDAO">
	
	<!-- 발주지시서 -->	
	<select id="getOrderReturnList" parameterType="java.util.HashMap" resultType="kr.happyjob.study.ship.model.OrderReturnModel">
		SELECT		PD.loginID AS 'LOGINID',
					UI.company AS 'COMPANYNAME',
					FORMAT(SUM(((BI.BORD_AMT * PD.PD_PRICE) - (IFNULL(RI.RE_AMT, 0) * PD.PD_PRICE))), 0) AS 'TOTAL'
		FROM		BORDER_INFO BI LEFT OUTER JOIN RETURN_INFO RI ON BI.BORD_CODE = RI.BORD_CODE 
								   INNER JOIN DIRECTION DI ON BI.DIR_CODE = DI.DIR_CODE 
								   INNER JOIN PD_INFO PD ON BI.MODEL_CODE = PD.MODEL_CODE 
								   INNER JOIN tb_userinfo UI ON PD.loginID = UI.loginID 
		WHERE		BI.BORD_TYPE <![CDATA[>=]]> 3
		<if test="keyword != null and !keyword.equals('')">
			AND UI.company LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="startDate != null and !endDate.equals('')">
			AND DI.DIR_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
		GROUP BY	PD.loginID
		LIMIT		#{startPage}, #{endPage}
	</select>
	
	<!-- 발주지시서 카운트 -->	
	<select id="getOrderReturnCount" resultType="int">
		SELECT		COUNT(DISTINCT PD.loginID)
		FROM		BORDER_INFO BI LEFT OUTER JOIN RETURN_INFO RI ON BI.BORD_CODE = RI.BORD_CODE 
								   INNER JOIN DIRECTION DI ON BI.DIR_CODE = DI.DIR_CODE 
								   INNER JOIN PD_INFO PD ON BI.MODEL_CODE = PD.MODEL_CODE 
								   INNER JOIN tb_userinfo UI ON PD.loginID = UI.loginID 
		WHERE		BI.BORD_TYPE <![CDATA[>=]]> 3
		<if test="keyword != null and !keyword.equals('')">
			AND UI.company LIKE CONCAT('%',#{keyword},'%')
		</if>
		<if test="startDate != null and !endDate.equals('')">
			AND DI.DIR_DATE BETWEEN #{startDate} AND #{endDate}
		</if>
	</select>
	
	<!-- 발주지시서 상세내역 -->
	<select id="getOrderReturnDetailList" parameterType="java.util.HashMap" resultType="kr.happyjob.study.ship.model.OrderReturnModel">
		SELECT  BI.BORD_CODE AS 'BORDCODE',
				RI.RE_CODE AS 'RECODE',
				DC.detail_name AS 'MODELNAME',
				BI.MODEL_CODE AS 'MODELCODE',
				PD.PD_NAME AS 'PDNAME',
				PD.PD_CODE AS 'PDCODE',
				PD.PD_CORP AS 'PDCORP',
				DATE_FORMAT(DI.DIR_DATE, '%Y-%m-%d') AS 'DIRDATE',
				FORMAT(BI.BORD_AMT, 0) AS 'BORDAMT',
				FORMAT(PD.PD_PRICE, 0) AS 'PDPRICE',
				BI.WH_CODE AS 'WHCODE',
				WI.WH_NAME AS 'WHNAME',
				RI.RE_TYPE AS 'RETYPE',
				BI.BORD_DATE AS 'BORDDATE'
		FROM 	BORDER_INFO BI	LEFT OUTER JOIN RETURN_INFO RI ON BI.BORD_CODE = RI.BORD_CODE 
								INNER JOIN DIRECTION DI ON BI.DIR_CODE = DI.DIR_CODE 
								INNER JOIN PD_INFO PD ON BI.MODEL_CODE = PD.MODEL_CODE 
								INNER JOIN WHOUSE_INFO WI ON BI.WH_CODE = WI.WH_CODE 
								INNER JOIN tb_detail_code DC ON DC.group_code = 'proCD' AND DC.detail_code = PD.MODEL_NAME 
		WHERE 	BI.BORD_TYPE <![CDATA[>=]]> 3 AND PD.loginID = #{loginId}
    	GROUP BY BI.BORD_CODE
    	LIMIT		#{startPage}, #{endPage}
	</select>
	
	<!-- 발주지시서 상세내역 카운트 -->
	<select id="getOrderReturnDetailCount" resultType="int">
		SELECT  COUNT(*)
		FROM 	BORDER_INFO BI	LEFT OUTER JOIN RETURN_INFO RI ON BI.BORD_CODE = RI.BORD_CODE 
								INNER JOIN DIRECTION DI ON BI.DIR_CODE = DI.DIR_CODE 
								INNER JOIN PD_INFO PD ON BI.MODEL_CODE = PD.MODEL_CODE 
								INNER JOIN WHOUSE_INFO WI ON BI.WH_CODE = WI.WH_CODE 
								INNER JOIN tb_detail_code DC ON DC.group_code = 'proCD' AND DC.detail_code = PD.MODEL_NAME 
		WHERE 	BI.BORD_TYPE <![CDATA[>=]]> 3 AND PD.loginID = #{loginId}
	</select>
	
	<!-- 발주완료 -->
	<update id="updateBorderInfo" parameterType="java.util.HashMap">
		UPDATE	BORDER_INFO  
		SET		BORD_DATE = DATE_FORMAT(NOW(), '%Y%m%d')
				AND BORD_TYPE = <if test="type.equals('in')">4</if>
								<if test="type.equals('out')">5</if>
		WHERE	BORD_CODE = #{bordCode}
	</update>
	
	<!-- 반품정보 -->
	<insert id="insertReturnInfo" parameterType="java.util.HashMap">
		<selectKey keyProperty="reCode" resultType="int" order="BEFORE">
			SELECT	IFNULL(MAX(RE_CODE) + 1, 1)
			FROM	RETURN_INFO
		</selectKey>
		INSERT INTO RETURN_INFO (RE_CODE, WH_CODE, MODEL_CODE, BORD_CODE, RE_AMT, RE_TYPE, RE_OUT)
		VALUES (#{reCode}, #{whCode}, #{modelCode}, #{bordCode}, #{bordAmt}, #{type}, 0)
	</insert>
	
	<!-- 반품정보 -->
	<update id="updateReturnInfo" parameterType="java.util.HashMap">
		UPDATE RETURN_INFO 
		SET		RE_DATE = DATE_FORMAT(NOW(), '%Y%m%d')
		WHERE 	RE_CODE = #{reCode}
	</update>
	
	<!-- 창고 입출고 -->
	<insert id="insertWhouseHousing" parameterType="java.util.HashMap">
		<selectKey keyProperty="whNo" resultType="int" order="BEFORE">
			SELECT	IFNULL(MAX(WH_NO) + 1, 1)
			FROM	WHOUSE_HOUSING
		</selectKey>
		INSERT INTO WHOUSE_HOUSING (WH_NO, WH_CODE, MODEL_CODE, loginID, WH_TYPE, WH_AMT, WH_DATE)
		VALUES (#{whNo}, #{whCode}, #{modelCode}, #{loginId}, <if test="type.equals('in')">0</if>
															  <if test="type.equals('out')">1</if>, #{bordAmt}, DATE_FORMAT(NOW(), '%Y%m%d'))
	</insert>
	
	<!-- 창고 재고 -->
	<update id="updateWhouseStock" parameterType="java.util.HashMap">
		UPDATE	WHOUSE_STOCK  
		SET		WH_STOCK = (SELECT	WH_STOCK
							<if test="type.equals('in')">
								+ #{bordAmt}
							</if>
							<if test="type.equals('out')">
								- #{bordAmt}
							</if>
							FROM	WHOUSE_STOCK
							WHERE	WH_CODE = #{whCode} AND MODEL_CODE = #{modelCode})
		WHERE	WH_CODE = #{whCode} AND MODEL_CODE = #{modelCode}
	</update>
	
</mapper>